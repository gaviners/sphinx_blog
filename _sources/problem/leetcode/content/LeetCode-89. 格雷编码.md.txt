# LeetCode: 89. 格雷编码

[TOC]

## 1、题目描述



格雷编码是一个二进制数字系统，在该系统中，两个连续的数值仅有一个位数的差异。

给定一个代表编码总位数的非负整数 *n*，打印其格雷编码序列。格雷编码序列必须以 0 开头。

**示例 1:**

```
输入: 2
输出: [0,1,3,2]
解释:
00 - 0
01 - 1
11 - 3
10 - 2

对于给定的 n，其格雷编码序列并不唯一。
例如，[0,2,3,1] 也是一个有效的格雷编码序列。

00 - 0
10 - 2
11 - 3
01 - 1
```

**示例 2:**

```
输入: 0
输出: [0]
解释: 我们定义格雷编码序列必须以 0 开头。
     给定编码总位数为 n 的格雷编码序列，其长度为 2n。当 n = 0 时，长度为 20 = 1。
     因此，当 n = 0 时，其格雷编码序列为 [0]。
```



## 2、解题思路

​	实际上题目很简单，找一下规律就好了

​	如果是n位的格雷编码，一共是$2^n$项



实际上，有这样的规律

1位的格雷编码，是这样的

0

1

两位的格雷编码是这样的：

00

01

11

10

3位的格雷编码是这样的

000

001

011

010

110

111

101

100



规律就是，每增加一位，格雷编码扩大两倍，并且，前面的一半与n-1为的相同，后面的则是在前面的基础上增加1，并且倒序输出即可



所以，我们就能得到4位的格雷编码了

0000
0001
0011
0010
0110
0111
0101
0100



（先把3位的复制过来，前面加0）

1100
1101
1111
1110
1010
1011
1001
1000

然后是在前面加一，并且复制过来，倒序即可



题目里面描述的两种，实际上是初始的1位的情况，有两种：

```
0
1
```

```
1
0
```

由此，不断迭代出来的就有两种情况了



```python
class Solution:
    def grayCode(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        if n == 0:
            return [0]

        result = [0, 1]

        for i in range(1, n):

            for j in range(2 ** i - 1, -1, -1):
                result.append(result[j] ^ (1 << i))
        return result
```







